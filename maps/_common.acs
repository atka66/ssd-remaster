int deepWaterN = 128;
bool inDeepWater[128];
bool onWaterSurface[128];

bool tiszaszaki_dw_act_below_surface;
bool tiszaszaki_dw_act_above_surface;

int script210_wtag, script210_wtid;

int acs904_ang_n=8;

// spawn IDs (by tiszaszaki)

#define T_GREENARMOUR T_GREENARMOR

#define T_BOOM 161
#define T_ICEJET 223
#define T_FIREJET 224
#define T_MINE 20077
#define T_HEXENARROW 209

#define T_REIVERFIREBALL 207
#define T_REIVERFIREBALL2 212
#define T_IMPFIREBALL2 201
#define T_CACOFIREBALL 126
#define T_CACOFIREBALL2 202
#define T_ARACHNOTRONPLASMA2 205
#define T_MANCUBUSFIREBALL 204
#define T_BARONFIREBALL 203
#define T_BLOODSCOURGESHOT 208

#define T_BANBALL 215
#define T_BANIPBALL 216

#define T_ENHANCEDDEMON 30017
#define T_ENHANCEDCACODEMON 30020
#define T_ENHANCEDIMP 30015
#define T_MINICYBERDEMON 23

#define T_FIREBOMB 217
#define T_MACE2 211
#define T_ROCKET2 116
#define T_TRACER2 9

#define T_PLASMABOLT2 206

#define T_SPHERE 189
#define T_RING 167

// deep water effect scripts (by tiszaszaki)

// splashing

script "tiszaszaki_deepwater_in" (int i) // in
{
    if (!inDeepWater[i])
    {
        PlaySound(0,"splash");
        inDeepWater[i]=true;
    }
}

script "tiszaszaki_deepwater_out" (int i) // out
{
    if (inDeepWater[i])
    {
        PlaySound(0,"splash");
        inDeepWater[i]=false;
    }
}

script 210 (int i, int wtag, int wtid)
{
    if (!onWaterSurface[i])
    {
        script210_wtag = wtag;
        script210_wtid = wtid;

        onWaterSurface[i]=true;
        ACS_NamedExecute("tiszaszaki_deepwater_do_splash", 0, i,wtag,wtid);
    }
}

script 211 (int i)
{
    if (onWaterSurface[i])
    {
        onWaterSurface[i]=false;
    }
}

// thing activation (e.g. ambients)

script 212 (int i, int tid, int active) // in both ways
{
    tiszaszaki_dw_act_below_surface = true;
    tiszaszaki_dw_act_above_surface = true;

    while (!onWaterSurface[i]) Delay(1);
    ACS_NamedExecute("tiszaszaki_deepwater_do_thing_activation", 0, i,tid,active);
}

script 213 (int i, int tid, int active) // downward only
{
    tiszaszaki_dw_act_below_surface = true;
    tiszaszaki_dw_act_above_surface = false;

    while (!onWaterSurface[i]) Delay(1);
    ACS_NamedExecute("tiszaszaki_deepwater_do_thing_activation", 0, i,tid,active);
}

function int tiszaszaki_deepwater_check(int activator, int wtag, int wtid)
{
    int x=GetActorX(wtid);
    int y=GetActorX(wtid);
    int sfloor=GetSectorFloorZ(wtag, x,y);
    int playerEyeHeight=(GetActorZ(activator) - sfloor) + GetActorViewHeight(activator);
    int waterSurfaceHeight=GetSectorCeilingZ(wtag, x,y) - sfloor;
    int res=0;

    if (playerEyeHeight < waterSurfaceHeight) res = -1;
    if (playerEyeHeight > waterSurfaceHeight) res = 1;

    return res;
}

script "tiszaszaki_deepwater_do_splash" (int i, int wtag, int wtid)
{
    while (onWaterSurface[i])
    {
        int checkVal=tiszaszaki_deepwater_check(0, wtag, wtid);
        int dl=2;
        if (checkVal < 0)
            ACS_NamedExecute("tiszaszaki_deepwater_in", 0, i,0,0);
        if (checkVal > 0)
            ACS_NamedExecute("tiszaszaki_deepwater_out", 0, i,0,0);
        Delay(dl);
    }
}

script "tiszaszaki_deepwater_do_thing_activation" (int i, int tid, int active_i)
{
    int wtag=script210_wtag;
    int wtid=script210_wtid;

    bool active=false;
    if (active_i != 0) active=true;

    while (onWaterSurface[i])
    {
        int checkVal=tiszaszaki_deepwater_check(0, wtag, wtid);
        int dl=2;
        if (tiszaszaki_dw_act_below_surface && (checkVal < 0))
        {
            if (active)
                Thing_Activate(tid);
            else
                Thing_Deactivate(tid);
        }
        if (tiszaszaki_dw_act_above_surface && (checkVal > 0))
        {
            if (active)
                Thing_Deactivate(tid);
            else
                Thing_Activate(tid);
        }
        Delay(dl);
    }
}

script 904 (int target_tid, int target_pitch, int freeze_activator) // generic face to actor
{
        int ang0=GetActorAngle(0), ang1=VectorAngle(GetActorX(target_tid)-GetActorX(0),GetActorY(target_tid)-GetActorY(0));
        int pit0=GetActorPitch(0), pit1=FixedDiv(target_pitch << 16,360 << 16);
        int ang_d=ang1-ang0, pit_d=pit1-pit0;
        int i=0, ang_n=acs904_ang_n;

	bool freeze=false;
	if (freeze_activator != 0) freeze=true;

        if (freeze) setplayerproperty (0, TRUE, PROP_TOTALLYFROZEN);
        delay(15);

        //Log(d:ang0 >> 8,s:",",d:ang1 >> 8);
        //Log(d:pit0 >> 8,s:",",d:pit1 >> 8);
        
        for (i=0;i<ang_n;i++)
        {
            int i_fixed=fixeddiv((i+1) << 16,ang_n << 16);
            int ang=ang0 + fixedmul(ang_d,i_fixed), pit=pit0 + fixedmul(pit_d,i_fixed);

            //Log(d:i,s:":",d:ang >> 8,s:",",d:pit >> 8);

            setactorangle(0, ang);
            setactorpitch(0, pit);

            delay(1);
        }

        if (freeze) setplayerproperty (0, FALSE, PROP_TOTALLYFROZEN);
}

script "tiszaszaki_common" OPEN
{
	for (int i=0;i<deepWaterN;i++)
	{
		inDeepWater[i] = false;
		onWaterSurface[i] = false;
	}
}

// useful functions (by tiszaszaki)

function int min(int a, int b)
{
	int res=b;
	if (a < b) res = a;
	return res;
}

function int max(int a, int b)
{
	int res=b;
	if (a > b) res = a;
	return res;
}